/*===========================================================================*/
/* Copyright (C) 2001 Authors                                                */
/*                                                                           */
/* This source file may be used and distributed without restriction provided */
/* that this copyright statement is not removed from the file and that any   */
/* derivative work contains the original copyright notice and the associated */
/* disclaimer.                                                               */
/*                                                                           */
/* This source file is free software; you can redistribute it and/or modify  */
/* it under the terms of the GNU Lesser General Public License as published  */
/* by the Free Software Foundation; either version 2.1 of the License, or    */
/* (at your option) any later version.                                       */
/*                                                                           */
/* This source is distributed in the hope that it will be useful, but WITHOUT*/
/* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or     */
/* FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public       */
/* License for more details.                                                 */
/*                                                                           */
/* You should have received a copy of the GNU Lesser General Public License  */
/* along with this source; if not, write to the Free Software Foundation,    */
/* Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA        */
/*                                                                           */
/*===========================================================================*/
/*                     CALL:   DATA READ ACCESS FROM ROM                     */
/*---------------------------------------------------------------------------*/
/* Test the CALL instruction with all addressing modes making a read access  */
/* to the ROM.                                                               */
/*                                                                           */
/* Author(s):                                                                */
/*             - Olivier Girard,    olgirard@gmail.com                       */
/*                                                                           */
/*---------------------------------------------------------------------------*/
/* $Rev$                                                                */
/* $LastChangedBy$                                          */
/* $LastChangedDate$          */
/*===========================================================================*/

.include "pmem_defs.asm"

.global main

main:
        # Initialization
	#------------------------

	mov   #DMEM_252, r1        ;# Initialize stack pointer
	mov     #0x0000, r5        ;# Initialize R5


	mov     #0x1000, r15


        # Addressing mode: @Rn
	#------------------------

	mov    #data_aRn_call, r4
	mov           #0x0000, r5
	call                  @r4           ;# CALL TEST_ROUTINE_aRN

	mov     #0x2000, r15


        # Addressing mode: @Rn+
	#------------------------

	mov    #data_aRni_call, r4
	mov            #0x0000, r5
	call                   @r4+         ;# CALL TEST_ROUTINE_aRNi

	mov     #0x3000, r15


        # Addressing mode: X(Rn)
	#------------------------

	mov    #data_xRn_call, r4
	mov           #0x0000, r5
	call                26(r4)          ;# CALL TEST_ROUTINE_xRN

	mov     #0x4000, r15


        # Addressing mode: EDE
	#------------------------
.set   EDE_21E,  DMEM_21E

	mov     #0x0000, r5
	call    data_EDE_call               ;# CALL TEST_ROUTINE_EDE

	mov     #0x5000, r15


        # Addressing mode: &EDE
	#------------------------
.set   aEDE_220,  DMEM_220

	mov     #0x0000, r5
	call  &data_aEDE_call               ;# CALL TEST_ROUTINE_aEDE

	mov     #0x6000, r15


        /* ----------------------         END OF TEST        --------------- */
end_of_test:
	nop
	br #0xffff



        /* ----------------------         TEST FUNCTIONS     --------------- */

TEST_ROUTINE_RN:
        mov #0x1234, r5
	ret

TEST_ROUTINE_aRN:
        mov #0x5678, r5
	ret

TEST_ROUTINE_aRNi:
        mov #0x9abc, r5
	ret

TEST_ROUTINE_N:
        mov #0xabcd, r5
	ret

TEST_ROUTINE_xRN:
        mov #0xef01, r5
	ret

TEST_ROUTINE_EDE:
        mov #0x2345, r5
	ret

TEST_ROUTINE_aEDE:
        mov #0x6789, r5
	ret

	
        /* ----------------------            DATA TABLE      --------------- */
data_aRn_call:
	.word TEST_ROUTINE_aRN

data_aRni_call:
	.word TEST_ROUTINE_aRNi

data_xRn_call:
	.word 0x0000
	.word 0x0000
	.word 0x0000
	.word 0x0000
	.word 0x0000
	.word 0x0000
	.word 0x0000
	.word 0x0000
	.word 0x0000
	.word 0x0000
	.word 0x0000
	.word 0x0000
	.word 0x0000
	.word TEST_ROUTINE_xRN

data_EDE_call:
	.word TEST_ROUTINE_EDE

data_aEDE_call:
	.word TEST_ROUTINE_aEDE


        /* ----------------------         INTERRUPT VECTORS  --------------- */

.section .vectors, "a"
.word end_of_test  ; Interrupt  0 (lowest priority)    <unused>
.word end_of_test  ; Interrupt  1                      <unused>
.word end_of_test  ; Interrupt  2                      <unused>
.word end_of_test  ; Interrupt  3                      <unused>
.word end_of_test  ; Interrupt  4                      <unused>
.word end_of_test  ; Interrupt  5                      <unused>
.word end_of_test  ; Interrupt  6                      <unused>
.word end_of_test  ; Interrupt  7                      <unused>
.word end_of_test  ; Interrupt  8                      <unused>
.word end_of_test  ; Interrupt  9                      <unused>
.word end_of_test  ; Interrupt 10                      Watchdog timer
.word end_of_test  ; Interrupt 11                      <unused>
.word end_of_test  ; Interrupt 12                      <unused>
.word end_of_test  ; Interrupt 13                      <unused>
.word end_of_test  ; Interrupt 14                      NMI
.word main         ; Interrupt 15 (highest priority)   RESET
